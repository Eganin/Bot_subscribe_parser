import os.path
import requests
from bs4 import BeautifulSoup as bs4
from collections import namedtuple
from typing import List, NamedTuple
import re


class StopGame(object):
    '''–ö–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –ø–∞—Ä—Å–Ω–≥ —Å–∞–π—Ç–∞ stopgame'''

    def __init__(self, file_save: str = 'last_key_parser.txt') -> None:
        self.base_url = 'https://stopgame.ru/review/new/'
        self.info = namedtuple('game', ['poster', 'text', 'score', 'title', 'href'])
        self.new_url = 'https://stopgame.ru'
        self.href_game = []
        self.file_save = file_save
        if os.path.exists(self.file_save):
            self.lastkey = open(file_save, 'r').read()

        else:
            '''–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –∑–∞–ø–∏—Å—å –≤ –Ω–µ–≥–æ –∫–ª—é—á–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä—ã'''
            with open(file_save, 'w') as file:
                self.lastkey = self.parse_href(self.last_href())
                file.write(self.lastkey)

    def new_game_href(self) -> List[str]:
        '''—Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç –Ω–æ–≤—ã–µ –≤—ã–ø—É—â–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏'''
        r = requests.get(self.base_url)
        soup = bs4(r.content, 'lxml')
        block_href = soup.select('div.item.article-summary.article-summary-card')
        for i in block_href:
            try:
                href = self.new_url + str(i.find('a', attrs={'href': True})['href'])
                href_parse = self.parse_href(href)

                if int(href_parse) > int(self.lastkey) and int(href_parse) != int(self.lastkey):  # —Å–≤–µ—Ä–∫–∞ —Å –∫–ª—é—á–æ–º
                    self.href_game.append(href)

            except:
                href = ''

        return self.href_game

    def parse_game_info(self, url: str) -> NamedTuple:
        '''–ø–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã'''
        r = requests.get(url)
        soup = bs4(r.content, 'lxml')
        try:
            poster = re.match(r'background-image:\s*url\((.+?)\)', soup.select('.image-game-logo > .image')[0]['style'])

        except:
            poster = ''

        try:
            excpert_text = soup.select('.article.article-show')[0].text[0:400] + '...'

        except:
            excpert_text = ''

        try:
            score = self.sum_score(soup.select('.game-stopgame-score > .score')[0]['class'][1])

        except:
            score = ''

        block_game = soup.select('div.game-details')
        for info in block_game:
            try:
                title = info.find('h1', attrs={'class': 'article-title'}).text

            except:
                title = ''

            try:
                href = url

            except:
                href = ''

            return self.info(poster=poster.group(1),
                             text=excpert_text,
                             score=score,
                             title=title,
                             href=href)

    def sum_score(self, score):
        '''–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ—Ü–µ–Ω–∫—É'''
        if score == 'score-1':
            return "–ú—É—Å–æ—Ä"
        elif score == 'score-2':
            return "–ü—Ä–æ—Ö–æ–¥–Ω—è–∫"
        elif score == 'score-3':
            return "–ü–æ—Ö–≤–∞–ª—å–Ω–æüëçüëçüëçüëç"
        elif score == 'score-4':
            return "–ò–∑—É–º–∏—Ç–µ–ª—å–Ω–æ "

    def update_last_key(self, result: str) -> str:
        '''–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–¥—é—á–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤—ã—à–µ–¥—à—É—é –∏–≥—Ä—É'''
        self.lastkey = result
        with open(self.file_save, "r+") as f:
            data = f.read()
            f.seek(0)
            f.write(result)
            f.truncate()

        return result

    def last_href(self) -> str:
        '''–í—Ä–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏—à–æ—ã –Ω–∞ —Å–∞–π—Ç–µ'''
        r = requests.get(self.base_url)
        soup = bs4(r.content, 'lxml')
        block_href = soup.select('div.item.article-summary.article-summary-card')
        for i in block_href:
            href = i.find('a')['href']
            return self.new_url + str(href)

    def download_image(self, img: str) -> None:
        '''–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'''
        p = requests.get(img)
        out = open("img_stop_game.jpg", "wb")
        out.write(p.content)
        out.close()

    def parse_href(self, href: str) -> str:
        '''–ü–∞—Ä—Å–∏–Ω–≥ —Å—Å—ã–ª–∫–∏ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞'''
        result = href[25:]
        key = result.split('/')[0]
        return str(key)

    def clear(self):
        '''–ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—á–∏—â–∞–µ—Ç—Å—è —Å–ø–∏—Å–ª–∫ —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∏–≥—Ä—É'''
        self.href_game[:] = []
